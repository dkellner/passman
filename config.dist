#!/bin/bash

# Copyright 2014 Markus Lux

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# ======================================================================
# Edit the following two variables to your needs
#
# $PASS_FILE optimally should contain an absolute path, because it is not
# guaranteed that the script gets called from the same directory
# The plain password file contains entries in the form sitename,user,password
# and may be encrypted either with
#
# gpg --encrypt --recipient <gpg_identity> <plain_password_file>
#
# when using public-key cryptography or with
#
# gpg --symmetric --cipher-algo AES256 <plain_password_file>
#
# when using symmetric cryptography which does not require a private key.
# A plain text sample file is distributed in this directory: sample-passwords.txt
#
# $GPG_IDENTITY is your personal GPG identity you want to encrypt the
# password file with. If this variable is set, public-key cryptography will
# be used. If it is not set, symmetric cryptography will be used instead.
#
# $PASS_LENGTH determines the length of generated passwords.

PASS_FILE='' #FILL ME
GPG_IDENTITY='' #FILL ME
PASS_LENGTH='15'

# You can pass various options to dmenu to make passman look and behave
# differently. See `man dmenu` for details.
# For example, uncomment the following line to make passman appear at the bottom
# of the screen:
#DMENU_OPTIONS='-b'

# ======================================================================
